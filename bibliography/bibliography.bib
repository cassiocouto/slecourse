@inproceedings{SirerB99,
  author    = {Emin G{\"u}n Sirer and
               Brian N. Bershad},
  title     = {Using production grammars in software testing},
  pages     = {1-13},
  booktitle = {Proceedings of the Second Conference on Domain-Specific
               Languages (DSL '99), Austin, Texas, USA, October 3-5, 1999},
  publisher = {ACM},
  year      = {1999},
  isbn      = {1-58113-255-7},
  ee        = {http://dl.acm.org/citation.cfm?id=331960},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper shows how grammar-based test-data generation and an accompanying methodology of testing may be highly effective and scalable for testing language-based software. Previously, grammar-based testing was mainly focused on compiler testing. The paper specifically tests the Java virtual machine. See \cite{LaemmelS06} for another grammar-based testing paper, which also refers to the present paper in context.},
  note = "\added{Ralf L\"ammel} \public{http://www.cs.cornell.edu/people/egs/papers/kimera-dsl99.pdf}"
}

@article{KlintLV05,
  author    = "{Paul Klint and
               Ralf L{\"a}mmel and
               Chris Verhoef}",
  title     = {Toward an engineering discipline for grammarware},
  journal   = {ACM Trans. Softw. Eng. Methodol.},
  volume    = {14},
  number    = {3},
  year      = {2005},
  pages     = {331-380},
  ee        = {http://doi.acm.org/10.1145/1072997.1073000},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote    = "The paper surveys SLE (or grammarware engineering) by making an inventory of grammarware, describing some problems with the proper engineering of grammarware, stating some promises of addressing grammarware engineering more seriously, listing some matured or emerging principles of grammarware engineering, and calling out a list of research challenges.",
  note      = "\added{Ralf L\"ammel} \public{http://www.cs.vu.nl/grammarware/agenda/paper.pdf}"
}

@inproceedings{LaemmelS06,
  author    = {Ralf L{\"a}mmel and
               Wolfram Schulte},
  title     = {Controllable Combinatorial Coverage in Grammar-Based Testing},
  pages     = {19-38},
  booktitle = {Testing of Communicating Systems, 18th IFIP TC6/WG6.1 International
               Conference, TestCom 2006, New York, NY, USA, May 16-18,
               2006, Proceedings},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {3964},
  year      = {2006},
  isbn      = {3-540-34184-6},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper describes a highly systematic and scalable approach to grammar-based testing. The grammar is essentially interpreted in a combinatorial sense and a number of well-defined control mechanisms help with deriving test data of the intented shape, size, and number while also avoiding combinatorial explosion. The approach has been implemented in C\# and used for grammar-based testing in the .NET platform. Combinatorial explorations constrasts with randomized test-data generation. The paper provides a broad discussion of related work including a reference to \cite{SirerB99}.},
  note = "\added{Ralf L\"ammel} \public{http://homepages.cwi.nl/~ralf/ccc/paper.pdf}"
}

@article{Tratt08,
  author    = {Laurence Tratt},
  title     = {Domain specific language implementation via compile-time
               meta-programming},
  journal   = {ACM Trans. Program. Lang. Syst.},
  volume    = {30},
  number    = {6},
  year      = {2008},
  ee        = {http://doi.acm.org/10.1145/1391956.1391958},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper describes an embedding approach for the implementation of domain-specific languages (DSLs). The approach is based on the Converge programming language and uses its compile-time meta-programming facility. The accompanying methodoogy is meant to simplify DSL implementations and improve their quality. See \cite{RenggliGN10} for another approach on language embedding.},
  note = "\added{Ralf L\"ammel} \public{http://eprints.mdx.ac.uk/5920/1/Tratt-domain_specifci_language_implementation.pdf}"
}

@article{FavreGLW09,
  author    = {Jean-Marie Favre and
               Dragan Gasevic and
               Ralf L{\"a}mmel and
               Andreas Winter},
  title     = {Guest Editors' Introduction to the Special Section on Software
               Language Engineering},
  journal   = {IEEE Trans. Software Eng.},
  volume    = {35},
  number    = {6},
  year      = {2009},
  pages     = {737-741},
  ee        = {http://doi.ieeecomputersociety.org/10.1109/TSE.2009.78},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote    = {This is not a technical paper, but rather an extended introduction to a special issue on SLE. The text provides a relatively early but somewhat matured description of the notions SLE and software languages. Also, the papers of the special issue provide a good test harness for discussing these notions. See \cite{Kleppe08} for another early informal definition of software languages and SLE.},
  note      = "\added{Ralf L\"ammel} \public{http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5353438}"
}

@inproceedings{RenggliGN10,
  author    = {Lukas Renggli and
               Tudor G\^{\i}rba and
               Oscar Nierstrasz},
  title     = {Embedding Languages without Breaking Tools},
  pages     = {380-404},
  ee        = {http://dx.doi.org/10.1007/978-3-642-14107-2_19},
  booktitle = {ECOOP 2010 - Object-Oriented Programming, 24th European
               Conference, Maribor, Slovenia, June 21-25, 2010. Proceedings},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {6183},
  year      = {2010},
  isbn      = {978-3-642-14106-5},
  ee        = {http://dx.doi.org/10.1007/978-3-642-14107-2},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper describes an embedding approach for the implementation of domain-specific languages (DSLs). Specifically, DSLs are modeled as language extensions of the underlying host language. The approach addresses the challenge of providing the language extensions in a manner that they integrate well with the development tools of the host language. The paper presents the extensible system Helvetia which intercepts the compilation pipeline of the Smalltalk host language to seamlessly integrate language extensions. See \cite{Tratt08} for another approach on language embedding.},
  note = "\added{Ralf L\"ammel} \public{http://scg.unibe.ch/archive/papers/Reng10aEmbeddingLanguages.pdf}"
}

@inproceedings{ErdwegRKO11,
  author    = {Sebastian Erdweg and
               Tillmann Rendel and
               Christian K{\"a}stner and
               Klaus Ostermann},
  title     = {SugarJ: library-based syntactic language extensibility},
  pages     = {391-406},
  booktitle = {Proceedings of the 26th Annual ACM SIGPLAN Conference on
               Object-Oriented Programming, Systems, Languages, and Applications,
               OOPSLA 2011, part of SPLASH 2011, Portland, OR, USA, October
               22 - 27, 2011},
  publisher = {ACM},
  year      = {2011},
  isbn      = {978-1-4503-0940-0},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper describes SugarJ---an approach to enhance Java's library notion with syntactic sugar, hence providing an easy-to-use language extension approach. For instance, XML, Java closures, and XML schemas can be integrated into the Java language in this way. SugarJ leverages SDF for syntax definitions, Stratego for the underlying transformation framework. SugarJ provides an incremental parsing approach so that library imports can affect parsing past the import.},
  note = "\added{Ralf L\"ammel} \public{http://www.informatik.uni-marburg.de/~rendel/erdweg11sugarj.pdf}"
}

@inproceedings{ErwigW11,
  author    = {Martin Erwig and
               Eric Walkingshaw},
  title     = {Semantics First! - Rethinking the Language Design Process},
  pages     = {243-262},
  booktitle = {Software Language Engineering - 4th International Conference,
               SLE 2011, Braga, Portugal, July 3-4, 2011, Revised Selected
               Papers},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {6940},
  year      = {2012},
  isbn      = {978-3-642-28829-6},
  ee        = {http://dx.doi.org/10.1007/978-3-642-28830-2},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper suggests a semantics-centric approach to language design as opposed to a more syntax-based one. Haskell is used as a metalanguage. General language operators are employed to adapt and grow sophisticated languages out of simple semantics concepts.},
  note = "\added{Ralf L\"ammel} \public{http://web.engr.oregonstate.edu/~erwig/papers/SemanticsFirst_SLE11.pdf}"
}

@inproceedings{HerrmannsdoerferVW10,
  author    = {Markus Herrmannsdoerfer and
               Sander Vermolen and
               Guido Wachsmuth},
  title     = {An Extensive Catalog of Operators for the Coupled Evolution
               of Metamodels and Models},
  pages     = {163-182},
  booktitle = {Software Language Engineering - Third International Conference,
               SLE 2010, Eindhoven, The Netherlands, October 12-13, 2010,
               Revised Selected Papers},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {6563},
  year      = {2011},
  isbn      = {978-3-642-19439-9},
  ee        = {http://dx.doi.org/10.1007/978-3-642-19440-5},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper deals with the coupled evolution of metamodels and models (in a MOF/EMF-like context). Such coupling has been studied intensively by the SLE and MDE communities and the present paper aims at a particularly ``complete'' catalog of operators for coupled transformation.},
  note = "\added{Ralf L\"ammel} \public{http://www.st.ewi.tudelft.nl/~vermolen/pmwiki/uploads/Main/HerrmannsdoerferVW10.pdf}"
}

@inproceedings{RuscioLP10,
  author    = {Davide Di Ruscio and
               Ralf L{\"a}mmel and
               Alfonso Pierantonio},
  title     = {Automated Co-evolution of GMF Editor Models},
  pages     = {143-162},
  booktitle = {Software Language Engineering - Third International Conference,
               SLE 2010, Eindhoven, The Netherlands, October 12-13, 2010,
               Revised Selected Papers},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {6563},
  year      = {2011},
  isbn      = {978-3-642-19439-9},
  ee        = {http://dx.doi.org/10.1007/978-3-642-19440-5},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper studies coupled evolution in the context of Eclipse Modeling Framework (EMF) and the associated Graphical Modeling Framework (GMF). In this context, we face several coupled models; if the domain model changes, then several other models must co-change. The problem is interesting because of the heterogeneity of the involved models.},
  note = "\added{Ralf L\"ammel} \public{http://userpages.uni-koblenz.de/~laemmel/gmfco/paper.pdf}"
}

@article{Thomas06apis,
  author    = {Dave Thomas},
  title     = {The API Field of Dreams - Too Much Stuff! It's Time to Reduce
               and Simplify APIs!},
  journal   = {Journal of Object Technology},
  volume    = {5},
  number    = {6},
  year      = {2006},
  pages     = {23-27},
  ee        = {http://dx.doi.org/10.5381/jot.2006.5.6.c3},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper takes a critical look at the promises and realities of APIs (class libraries and frameworks). For instance, API designs are said to be complex (e.g., in terms of included unnecessary features) and to involve unnecessary variation (e.g., in terms of varying and copying familiar classes and methods). The methodology for producing APIs is also found problematic (e.g., in terms of the JSR process leading to many APIs with some of them serving business strategies rather than real users). The proposal is to strive for user-driven API design and uniformity. The paper is, in fact, a column, which may be a good starting point for searching for technical publications around this topic. This is one D.~Thomas' columns referrenced in this bibliography~\cite{Thomas03impedance,Thomas06models,Thomas06apis} for their SLE relevance.},
  note = "\added{Ralf L\"ammel} \public{http://www.jot.fm/issues/issue_2006_07/column3.pdf}"
}

@article{Thomas06models,
  author    = {Dave Thomas},
  title     = {Programming with Models? Modeling with Code. The Role of
               Models in Software Development},
  journal   = {Journal of Object Technology},
  volume    = {5},
  number    = {8},
  year      = {2006},
  pages     = {15-19},
  ee        = {http://dx.doi.org/10.5381/jot.2006.5.8.c2},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper complements the notion of model-driven engineering by the idea of expressing models as code. In this manner, the column provides an inspiring discussion on the differences between models and code, and the pros and cons of using designated modeling frameworks subject to manual or automated model-to-code transformation eventually, or expressive programming languages, which can express models conveniently, or mainstream languages with more encoding overhead for models. The paper is, in fact, a column, which may be a good starting point for searching for technical publications around this topic. This is one D.~Thomas' columns referrenced in this bibliography~\cite{Thomas03impedance,Thomas06models,Thomas06apis} for their SLE relevance.},
  note = "\added{Ralf L\"ammel} \public{http://www.jot.fm/issues/issue_2006_11/column2.pdf}"
}

@article{Thomas03impedance,
  author    = {Dave Thomas},
  title     = {The Impedance Imperative Tuples + Objects + Infosets = Too Much Stuff!},
  journal   = {Journal of Object Technology},
  volume    = {2},
  number    = {8},
  year      = {2003},
  pages     = {7-12},
  annote = {The paper takes a critical look at data programming---specifically in the sense of CRUD (Create, Read, Update, Delete). The discussion covers early keyed files, established means such as SQL and database access APIs, object-oriented databases, modern wrapping/mapping-based approaches (e.g., object/relational mapping). The column identifies various problems with data programming: diversity of data modeling and CRUD programming options and the practical need to mix them, difficulties of integrating different type systems and data query/transformation languages, proprietary developments, performance issues, and complexity of support technologies. The discussion also briefly touches some contenders that may address some problems with previous and established approaches. The paper is, in fact, a column, which may be a good starting point for searching for technical publications around this topic. This is one D.~Thomas' columns referrenced in this bibliography~\cite{Thomas03impedance,Thomas06models,Thomas06apis} for their SLE relevance.},
  note = "\added{Ralf L\"ammel} \public{http://www.jot.fm/issues/issue_2003_09/column1.pdf}"
}

@incollection{Kleppe08,
 author = "Anneke Kleppe",
 title = {Why Software Language Engineering?},
 booktitle = {Software Language Engineering: Creating Domain-Specific Languages Using Metamodels},
 publisher = {Addison-Wesley Professional},
 year = 2008,
 annote = {The paper is the motivational chapter from a textbook on SLE. The chapter describes the continuous increase of software languages and the trend of programming and modeling to blend into other. The author uses the term `mogram' to capture programs, models, schemas, and queries. The chapter begins with the following quote by Victor Hugo: ``An invasion of armies can be resisted, but not an idea whose time has come."  See \cite{FavreGLW09} for another early informal definition of software languages and SLE.},
 note = "\added{Ralf L\"ammel} \public{http://www.informit.com/articles/article.aspx?p=1312831}"
}

@inproceedings{DrivalosKPF08,
  author    = {Nikolaos Drivalos and
               Dimitrios S. Kolovos and
               Richard F. Paige and
               Kiran Jude Fernandes},
  title     = {Engineering a DSL for Software Traceability},
  pages     = {151-167},
  booktitle = {Software Language Engineering, First International Conference,
               SLE 2008, Toulouse, France, September 29-30, 2008. Revised
               Selected Papers},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {5452},
  year      = {2009},
  isbn      = {978-3-642-00433-9},
  ee        = {http://dx.doi.org/10.1007/978-3-642-00434-6},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper addresses the important SLE problem of traceability for related software artifacts in different software languages, at different levels of abstractions, related in different ways. The paper presents the engineering of the Traceability Metamodelling Language (TML), a metamodelling language dedicated to defining traceability metamodels.},
  note = "\added{Ralf L\"ammel} \closed{http://www.springerlink.com/content/d517t60440404548/}"
}

@inproceedings{AlvesV08,
  author    = {Tiago L. Alves and
               Joost Visser},
  title     = {A Case Study in Grammar Engineering},
  pages     = {285-304},
  booktitle = {Software Language Engineering, First International Conference,
               SLE 2008, Toulouse, France, September 29-30, 2008. Revised
               Selected Papers},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {5452},
  year      = {2009},
  isbn      = {978-3-642-00433-9},
  ee        = {http://dx.doi.org/10.1007/978-3-642-00434-6},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {In response to and prior to the publication of the ``Grammaware Agenda"~\cite{KlintLV05}, there have been various published efforts on using grammarware engineering. The present paper is a strong example of leveraging and advancing several areas of grammarware engineering in single study. That is, the study is concerned with development of a VDM-SL grammar from its ISO standard language reference.},
  note = "\added{Ralf L\"ammel} \public{http://wiki.di.uminho.pt/twiki/pub/Personal/Tiago/Publications/grammar-eng.pdf}"
}

@article{HeidenreichKA11,
  author    = {Florian Heidenreich and
               Jan Kopcsek and
               Uwe A{\ss}mann},
  title     = {Safe Composition of Transformations},
  journal   = {Journal of Object Technology},
  volume    = {10},
  year      = {2011},
  pages     = {7: 1-20},
  ee        = {http://dx.doi.org/10.5381/jot.2011.10.1.a7},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper provides an approach for the safe composition of (model) transformations. This problem is interesting from an SLE point of view because the transformations are in themselves linguistic artifacts, as much as the metamodels for the inputs and outputs, and finally the composition descriptions are linguistic artifacts, too. In addition, the achievement of safe composition requires technqiues that are overall informed by language design and language definition.},
  note = "\added{Ralf L\"ammel} \public{http://www.jot.fm/issues/issue_2011_01/article7.pdf}"
}

@article{HenrikssonHJZA08,
  author    = {Jakob Henriksson and
               Florian Heidenreich and
               Jendrik Johannes and
               Steffen Zschaler and
               Uwe A{\ss}mann},
  title     = {Extending grammars and metamodels for reuse: the Reuseware
               approach},
  journal   = {IET Software},
  volume    = {2},
  number    = {3},
  year      = {2008},
  pages     = {165-184},
  ee        = {http://dx.doi.org/10.1049/iet-sen:20070060},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {The paper captures some reusable language-design knowledge. That is, the paper supports the extension of a given core language with reuse-related expressiveness in the sense of partial programs or templates. (The approach is shown to be powerful enough to support, for example, a module system.) The observation is here that an increasing number of domain-specific languages calls for a more efficient and easier-to-use language design process where each new language can easily support some general expressiveness that is likely to be expected---such as the partial programs at hand. The approach is based on earlier work on Invasive Software Composition.},
  note = "\added{Ralf L\"ammel} \public{http://fheidenreich.de/work/files/IET-Reuseware-2008.pdf}"
}

@inproceedings{SwierstraAS98,
  author    = {S. Doaitse Swierstra and
               Pablo R. Azero Alcocer and
               Jo{\~a}o Saraiva},
  title     = "{Designing and Implementing Combinator Languages}",
  pages     = {150-206},
  booktitle = "{Advanced Functional Programming, Third International School,
               Braga, Portugal, September 12-19, 1998, Revised Lectures}",
  publisher = {Springer},
  series    = {LNCS},
  volume    = {1608},
  year      = {1999},
}

